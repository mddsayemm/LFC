#include <Servo.h>
#define enA 3 // Enable1 L298 Pin enA
#define in1 13 // Motor1 L298 Pin in1
#define in2 8 // Motor1 L298 Pin in2
#define in3 7 // Motor2 L298 Pin in3
#define in4 12 // Motor2 L298 Pin in4
#define enB 11 // Enable2 L298 Pin enB
#define L_S 2 // IR sensor Left
#define R_S 4 // IR sensor Right
#define echo 5 // Echo pin
#define trigger 6 // Trigger pin
#define S0_PIN A5  // color sensor S0 Pin
#define S1_PIN A4  //color  sensor S1 pim
#define S2_PIN A3  // color sensor S2 pin
#define S3_PIN A2  //color sensor S3 pin
#define OUT_PIN A0 // Color sensor signal out pin

Servo servo;  // setting Servo object name as servo
int Set = 4;   //  distance = 4 cm for ultrasonic 
int distance_F;  

void setup() { 
  Serial.begin(9600); 
  pinMode(R_S, INPUT); 
  pinMode(L_S, INPUT); 
  
  pinMode(echo, INPUT); 
  pinMode(trigger, OUTPUT); 
  
  pinMode(enA, OUTPUT); 
  pinMode(in1, OUTPUT); 
  pinMode(in2, OUTPUT); 
  pinMode(in3, OUTPUT); 
  pinMode(in4, OUTPUT); 
  pinMode(enB, OUTPUT); 
  
  pinMode(S0_PIN, OUTPUT);
  pinMode(S1_PIN, OUTPUT);
  pinMode(S2_PIN, OUTPUT);
  pinMode(S3_PIN, OUTPUT);
  pinMode(OUT_PIN, INPUT); 

  servo.attach(9);  // servo pin 9
  servo.write(180);  // intitial position for servo
  
  digitalWrite(S0_PIN, HIGH);
  digitalWrite(S1_PIN, LOW);

  distance_F = Ultrasonic_read();
  delay(500);
}

void loop() {  
  distance_F = Ultrasonic_read();
  Serial.print("D F="); Serial.println(distance_F);

  int rightSensor = digitalRead(R_S);
  int leftSensor = digitalRead(L_S);
  Serial.print("Right Sensor: "); Serial.println(rightSensor);
  Serial.print("Left Sensor: "); Serial.println(leftSensor);

  if (rightSensor == 1 && leftSensor == 1) {
    if (distance_F < Set) {
      Stop();
       delay(1000);
      int color = getColor();
      if (color == 1) {
        IgnoreObstacle(); 
      } else if (color == 2) {
        servo.write(0); 
        delay(1000);
        servo.write(180); 
        delay(1000);
         
      } else if (color == 3) {
        ParkCar();
      }
    } else {
      forward();
    }  
  } else if (rightSensor == 1 && leftSensor == 0) {
     
       turnLeft();
       
      
  } else if (rightSensor == 0 && leftSensor == 1) {
   
     turnRight();
      
     
    
  }
}

long Ultrasonic_read() {
  digitalWrite(trigger, LOW);
  delayMicroseconds(2);
  digitalWrite(trigger, HIGH);
  delayMicroseconds(10);
  long time = pulseIn(echo, HIGH);
  return time / 29 / 2;
}

int getColor() {
  int redValue, greenValue, blueValue;
  
  digitalWrite(S2_PIN, LOW);
  digitalWrite(S3_PIN, LOW);
  redValue = pulseIn(OUT_PIN, LOW);
  
  digitalWrite(S2_PIN, HIGH);
  digitalWrite(S3_PIN, HIGH);
  greenValue = pulseIn(OUT_PIN, LOW);
  
  digitalWrite(S2_PIN, LOW);
  digitalWrite(S3_PIN, HIGH);
  blueValue = pulseIn(OUT_PIN, LOW);

  Serial.print("Red: ");
  Serial.print(redValue);
  Serial.print("\tGreen: ");
  Serial.print(greenValue);
  Serial.print("\tBlue: ");
  Serial.println(blueValue);

  if (redValue < greenValue && redValue < blueValue) {
    Serial.println("Color: Red");
    return 1;
  } else if (blueValue < redValue && blueValue < greenValue) {
    Serial.println("Color: Blue");
    return 2;
  } else if (greenValue < redValue && greenValue < blueValue) {
    Serial.println("Color: Green");
    return 3;
  } else {
    return 0;
  }
}

void IgnoreObstacle() {
  Serial.println("avoiding");
  backward();
  delay(400);
  aturnRight();
  delay(500);
  aforward();
  delay(1000);
  aturnLeft();
  delay(500);
  aforward();
  delay(700);
  aturnLeft();
  delay(400);
}

void forward() {
  Serial.println("Moving forward");
  analogWrite(enA, 117); 
  analogWrite(enB, 130);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW); 
}

void aforward() {
  analogWrite(enA,200); 
  analogWrite(enB, 200);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW); 
}

void backward() {
  analogWrite(enA, 200); 
  analogWrite(enB, 200);
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
 
}

void abackward() {
  analogWrite(enA, 200); 
  analogWrite(enB, 200);
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}

void turnRight() {
  Serial.println("Turning right");
  analogWrite(enA, 140); 
  analogWrite(enB, 153);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}

void aturnRight() {
  analogWrite(enA, 200); 
  analogWrite(enB, 200);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}

void turnLeft() {
  Serial.println("Turning left");
  analogWrite(enA, 140); 
  analogWrite(enB, 153);
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW); 
}

void aturnLeft() {
  analogWrite(enA, 200); 
  analogWrite(enB, 200);
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW); 
}

void Stop() {
  Serial.println("Stopping");
  digitalWrite(in1, LOW); 
  digitalWrite(in2, LOW); 
  digitalWrite(in3, LOW); 
  digitalWrite(in4, LOW); 
}

void ParkCar() {
  Serial.println("Park");
  abackward();
  delay(400);
  aturnRight();
  delay(3000);
   
}